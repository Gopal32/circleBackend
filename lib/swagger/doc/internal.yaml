openapi: 3.0.1
servers:
  - url: http://localhost:3000/demo/api
info:
  title: Demo
  description: Demo documentation
  contact:
    name: vivaconnect support
  version: 1.0.0
tags:
  - name: User
    description: APIs Manage User
  - name: Category
    description: APIs Manage Category
  - name: Plan
    description: APIs Manage Plan
  - name: Mapping
    description: APIs Manage Mapping
  - name: News
    description: APIs Manage News
paths:
  /users/login:
    post:
      tags:
        - User
      summary: Login user
      description: Get all current user details
      requestBody:
        description: Sample body to be sent for user login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Returns user Id and token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  userId: true
                  token: true
        '306':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3096
                msg: User does not exist
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Unauthorized access
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/signUp:
    post:
      tags:
        - User
      summary: sign up page
      description: Enter email
      requestBody:
        description: Sample body to be sent for user sign up
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '200':
          description: Returns user ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Please check your registered email for verification code
                data:
                  userId: true
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: user already exists..
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please Enter valid email ID.
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/resendOtp:
    post:
      tags:
        - User
      summary: resend OTP
      description: Enter email and userId
      requestBody:
        description: Sample body to be sent for resend otp
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOTP'
        required: true
      responses:
        '200':
          description: Returns userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Please check your registered email for verification code
                data:
                  userId: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please Enter valid email ID.
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/forgetpassword:
    post:
      tags:
        - User
      summary: forgetpassword page
      description: Enter email
      requestBody:
        description: Sample body to be sent for forget password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgetPwd'
        required: true
      responses:
        '200':
          description: Returns user Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Please check your registered email for verification code
                data:
                  userId: true
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: user already exists..
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please Enter valid email ID.
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/updateProfile:
    patch:
      tags:
        - User
      summary: sign up page
      description: Enter email
      requestBody:
        description: Sample body to be sent for user sign up
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setusername'
        required: true
      responses:
        '200':
          description: Returns token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  token: true
        '306':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3096
                msg: User does not exist
                data: null
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: user already exists..
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please Enter valid email ID.
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/verifyOtp:
    patch:
      tags:
        - User
      summary: verification otp page
      description: Enter code & userId
      requestBody:
        description: Sample body to be sent for verify otp
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      responses:
        '200':
          description: Returns userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  userId: true
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid request
                data: null
        '402':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Invalid code
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/verifyUserName:
    get:
      tags:
        - User
      summary: get user by userid
      description: check userName exists or not
      parameters:
        - in: query
          name: userName
          description: check userName exists or not
          required: true
          schema:
            type: string
          examples:
            userName:
              value: support_1
      responses:
        '200':
          description: Returns succecc message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: user already exists..
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/verifyEmail:
    get:
      tags:
        - User
      summary: get user by userid
      description: check email exists or not
      parameters:
        - in: query
          name: email
          description: check email exists or not
          required: true
          schema:
            type: string
          examples:
            userName:
              value: example@gmail.com
      responses:
        '200':
          description: Returns Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: user already exists..
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/photo:
    put:
      tags:
        - User
      summary: update User photo
      description: update User photo
      security:
        - HeaderAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePic:
                  type: string
                  format: binary
      responses:
        '200':
          description: Returns Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: File size or pixel is less than expected
                data: null
                err: true
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please provide a file
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/generateUserName:
    post:
      tags:
        - User
      summary: generate unique username
      description: generate unique username
      requestBody:
        description: Sample body to be generate unique username
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUsername'
        required: true
      responses:
        '200':
          description: Returns username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  username: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: File size or pixel is less than expected
                data: null
                err: true
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please provide a file
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /users/generate/changepassword:
    post:
      tags:
        - User
      summary: change password
      description: change password
      requestBody:
        description: Sample body to be change password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Changepassword'
        required: true
      responses:
        '200':
          description: Returns smpp short message csv (download)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: File size or pixel is less than expected
                data: null
                err: true
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please provide a file
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /category:
    get:
      tags:
        - Category
      summary: get category list for user
      description: get category list for user
      responses:
        '200':
          description: Returns category list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - categoryId: u92821eb-ea03-476d-9652-d5b88b3c50f8
                    categoryName: sports
                    categoryDescription: text
                    categoryImage: /location
                    postCount: 1K
                    followersCount: 1M
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /category/admin:
    get:
      tags:
        - Category
      summary: get category list for user
      description: get category list for user
      responses:
        '200':
          description: Returns category list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - categoryId: u92821eb-ea03-476d-9652-d5b88b3c50f8
                    categoryName: sports
                    categoryDescription: text
                    categoryImage: /location
                    postCount: 1K
                    followersCount: 1M
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /plan:
    get:
      tags:
        - Plan
      summary: plan list details
      description: get plan list details
      security:
        - HeaderAuth: []
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - planId: u92821eb-ea03-476d-9652-d5b88b3c50f8
                    seeVoice: 1
                    seeUpdateProfile: 1
                    addVoice: 0
                    seeNews: 1
                    seeEvent: 0
                    addNews: 0
                    addEvent: 0
                    seeAchievement: 0
                    seeDetails: 1
                    spendAchievement: 0
                    applyCelebrity: 0
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /plan/:
    post:
      tags:
        - Plan
      summary: select plan details
      description: select plan details
      security:
        - HeaderAuth: []
      requestBody:
        description: Sample body to be select plan details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectPlan'
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  userId: u92821eb-ea03-476d-9652-d5b88b3c50f8
                  planId: u92821eb-ea03-476d-9652-d5b88b3c50f8
                  planName: basic
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /mapped/addcategory:
    patch:
      tags:
        - Mapping
      summary: mapped category with user
      description: mapped category with user
      security:
        - HeaderAuth: []
      requestBody:
        description: Sample body to be mapped category with user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MappedCategory'
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  data: null
        '363':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3063
                msg: No such category found.
                data: null
                err: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Inavlid Request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /mapped/userfollow/{followingId}:
    put:
      tags:
        - Mapping
      summary: mapped follow the user
      description: mapped follow the user
      security:
        - HeaderAuth: []
      parameters:
        - name: followingId
          in: path
          description: user id to follow
          required: true
          schema:
            type: string
          examples:
            followingId:
              value: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Inavlid Request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /mapped/userunfollow/{followingId}:
    put:
      tags:
        - Mapping
      summary: mapped unfollow the user
      description: mapped unfollow the user
      security:
        - HeaderAuth: []
      parameters:
        - name: followingId
          in: path
          description: user id to unfollow
          required: true
          schema:
            type: string
          examples:
            followingId:
              value: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Inavlid Request
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /mapped/special/user:
    get:
      tags:
        - Mapping
      summary: mapped unfollow the user
      description: mapped unfollow the user
      security:
        - HeaderAuth: []
      responses:
        '200':
          description: Returns get list of plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - userName: rahul
                    followUserId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
                    photoUrl: /location/
                    fullName: xyz
                    description: ABC
                    userStatus: Cricketer
                    isFollows: false
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/addNewsMultiMedia:
     put:
      tags:
        - News
      summary: add News Multi media
      description: add News Multi media
      security:
        - HeaderAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                newsUpload:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Returns Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: 
                  - /home/gopal/Android/demo/public/news/4a1c920a-550f-482e-9df3-d92bf8f82360/18d8847966.jpeg
                  - /home/gopal/Android/demo/public/news/4a1c920a-550f-482e-9df3-d92bf8f82360/edd64449b7.jpeg
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: File size or pixel is less than expected
                data: null
                err: true
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Please provide a file
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/addNews:
     post:
      tags:
        - News
      summary: create a news
      description: create a news
      security:
        - HeaderAuth: []
      requestBody:
        description: Sample body of create news
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatedNews'
      responses:
        '200':
          description: Returns Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: {}
        '308':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3008
                msg: news already exists.
                data: null
                err: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Plan does not have access
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/updateNews:
     put:
      tags:
        - News
      summary: update a news
      description: update a news
      security:
        - HeaderAuth: []
      requestBody:
        description: Sample body of update news
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNews'
      responses:
        '200':
          description: Returns Success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: {}
        '363':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3063
                msg: No such news found
                data: null
                err: null
        '401':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4000
                msg: Plan does not have access
                data: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/getUserBasedNews:
    get:
      tags:
        - News
      summary: get User Based News
      description: get User Based News
      security:
        - HeaderAuth: []
      parameters:
        - in: query
          name: followerId
          description: get news by followerId
          required: true
          schema:
            type: string
          examples:
            followerId:
              value: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
      responses:
        '200':
          description: Returns get list of news
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - newsId: rahul
                    newsTitle: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
                    newsDescription: xyz
                    newsUrl: 
                      - /public/news/f6ed39a7-1634-4091-bd0e-d164b2898b6e/3298579949.png"
                    categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '402':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 4001
                msg: Please enter follower id
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/getNews:
    get:
      tags:
        - News
      summary: get News
      description: get News
      security:
        - HeaderAuth: []
      responses:
        '200':
          description: Returns get list of news
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - newsId: rahul
                    newsTitle: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
                    newsDescription: xyz
                    newsUrl: 
                      - /demo/public/news/f6ed39a7-1634-4091-bd0e-d164b2898b6e/3298579949.png"
                    categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/getSuggestedNews:
    get:
      tags:
        - News
      summary: get News
      description: get News
      security:
        - HeaderAuth: []
      responses:
        '200':
          description: Returns get list of news
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  - newsId: rahul
                    newsTitle: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
                    newsDescription: xyz
                    newsUrl: 
                      - /public/news/f6ed39a7-1634-4091-bd0e-d164b2898b6e/3298579949.png"
                    categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/getNewsDetail:
    get:
      tags:
        - News
      summary: get News Detail
      description: get News Detail
      security:
        - HeaderAuth: []
      parameters:
        - in: query
          name: newsId
          description: get news by followerId
          required: true
          schema:
            type: string
          examples:
            newsId:
              value: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
      responses:
        '200':
          description: Returns get list of news Detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data:
                  newsId: rahul
                  newsTitle: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
                  newsDescription: xyz
                  newsUrl: 
                    - /public/news/f6ed39a7-1634-4091-bd0e-d164b2898b6e/3298579949.png"
                  categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
  /news/deleteNewsDetail:
    delete:
      tags:
        - News
      summary: delete News Detail
      description: delete News Detail
      security:
        - HeaderAuth: []
      parameters:
        - in: query
          name: newsId
          description: delete news by newsId
          required: true
          schema:
            type: string
          examples:
            newsId:
              value: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
      responses:
        '200':
          description: Returns get list of news Detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 2000
                msg: Success
                data: {}
        '300':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 3000
                msg: No record found
                data: null
                err: null
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 5000
                msg: Something went wrong. Please try again later.
                err: true
components:
  securitySchemes:
    HeaderAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Login:
      title: Login
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          description: Based on action data will be added
        password:
          type: string
      example:
        email: example@gmail.com
        password: ABC@123
    Signup:
      title: Signup
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Based on action data will be added
      example:
        email: example@gmail.com
    ResendOTP:
      title: ResendOTP
      required:
        - userId
        - email
      type: object
      properties:
        userId:
          type: string
          description: Based on action data will be added
        email:
          type: string
          description: Based on action data will be added
      example:
        userId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        email: example@gmail.com
    ForgetPwd:
      title: ForgetPwd
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Based on action data will be added
      example:
        email: example@gmail.com
    Setusername:
      title: Set username
      required:
        - fullName
        - password
        - userName
        - userId
        - signupType
        - subscriptionId
      type: object
      properties:
        fullName:
          type: string
          description: Based on action data will be added
        password:
          type: string
          description: Based on action data will be added
        userName:
          type: string
          description: Based on action data will be added
        userId:
          type: string
          description: Based on action data will be added
        signupType:
          type: string
          description: Based on action data will be added
        subscriptionId:
          type: string
          description: Based on action data will be added
      example:
        fullName: asd sdafas
        password: pass@123
        userName: support_1
        userId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        signupType: email
        subscriptionId: free_plan
    VerifyOTP:
      title: Set username
      required:
        - userId
        - code
      type: object
      properties:
        userId:
          type: string
          description: Based on action data will be added
        code:
          type: number
          description: Based on action data will be added
      example:
        userId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        code: 731609
    GenerateUsername:
      title: Generate Username
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Based on action data will be added
      example:
        email: example@gmail.com
    Changepassword:
      title: change password
      required:
        - newPassword
        - userId
      type: object
      properties:
        newPassword:
          type: string
          description: Based on action data will be added
        userId:
          type: string
          description: Based on action data will be added
      example:
        newPassword: example@gmail.com
        userId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
    MappedCategory:
      title: Mapped Category
      required:
        - categoryId
      type: object
      properties:
        categoryId:
          type: array
          items:
            type: string
            description: Based on action data will be added
      example:
        categoryId:
          - c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
          - c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
    SelectPlan:
      title: Select Plan
      required:
        - planName
      type: object
      properties:
        planName:
          type: string
          description: Based on action data will be added
      example:
        planName: basic
    CreatedNews:
      title: Created News
      required:
        - newsTitle
        - newsDescription
        - newsUrl
        - categoryId
      type: object
      properties:
        newsTitle:
          type: string
          description: Based on action data will be added
        newsDescription:
          type: string
          description: Based on action data will be added
        newsUrl:
          type: array
          items:
            type: string
            description: Based on action data will be added
        categoryId:
          type: string
          description: Based on action data will be added
      example:
        newsTitle: xyz
        newsDescription: xyz
        newsUrl:
          - /location
          - /location
        categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
    UpdateNews:
      title: update News
      required:
        - newsId
        - newsTitle
        - newsDescription
        - newsUrl
        - categoryId
      type: object
      properties:
        newsId:
          type: string
          description: Based on action data will be added
        newsTitle:
          type: string
          description: Based on action data will be added
        newsDescription:
          type: string
          description: Based on action data will be added
        newsUrl:
          type: array
          items:
            type: string
            description: Based on action data will be added
        categoryId:
          type: string
          description: Based on action data will be added
      example:
        newsId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
        newsTitle: xyz
        newsDescription: xyz
        newsUrl:
          - /location
          - /location
        categoryId: c64ffae4-ac8b-4a6f-acf9-6dd1abb9aea2
    ApiResponse:
      title: Standard response format of demo  user api response
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
